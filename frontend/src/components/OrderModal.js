import React, { useState, useEffect } from 'react';
import './OrderModal.css';

const OrderModal = ({ isOpen, onClose, onSubmit, totalPrice }) => {
  const [fullName, setFullName] = useState('');
  const [address, setAddress] = useState('');
  const [deliveryMethod, setDeliveryMethod] = useState('');
  const [deliveryMethods, setDeliveryMethods] = useState([]);
  const [loading, setLoading] = useState(false);
  const [success, setSuccess] = useState(false);
  const [error, setError] = useState('');

  useEffect(() => {
    if (isOpen) {
      console.log('OrderModal: –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏...');
      fetch('/api/delivery-methods/')
        .then(res => {
          console.log('OrderModal: –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API:', res.status);
          return res.json();
        })
        .then(data => {
          console.log('OrderModal: –¥–∞–Ω–Ω—ã–µ –æ—Ç API:', data);
          if (Array.isArray(data)) {
            console.log('OrderModal: –¥–∞–Ω–Ω—ã–µ - –º–∞—Å—Å–∏–≤, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º:', data);
            setDeliveryMethods(data);
          } else if (Array.isArray(data.results)) {
            console.log('OrderModal: –¥–∞–Ω–Ω—ã–µ.results - –º–∞—Å—Å–∏–≤, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º:', data.results);
            setDeliveryMethods(data.results);
          } else {
            console.log('OrderModal: –¥–∞–Ω–Ω—ã–µ –Ω–µ –≤ –æ–∂–∏–¥–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤');
            setDeliveryMethods([]);
          }
        })
        .catch(error => {
          console.error('OrderModal: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏:', error);
          setDeliveryMethods([]);
        });
    }
  }, [isOpen]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');
    try {
      await onSubmit({ fullName, address, deliveryMethod });
      setSuccess(true);
      setTimeout(() => {
        setSuccess(false);
        onClose();
        setFullName('');
        setAddress('');
        setDeliveryMethod('');
      }, 2000);
    } catch (err) {
      const errorMessage = err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
      setError(errorMessage);
      console.error('–û—à–∏–±–∫–∞ –≤ OrderModal:', err);
    } finally {
      setLoading(false);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="order-modal-overlay animate__animated animate__fadeIn">
      <div className="order-modal animate__animated animate__zoomIn">
        {success ? (
          <div className="order-modal-success animate__animated animate__fadeInDown">
            <div className="order-modal-success-icon">üéâ</div>
            <h3>–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h3>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä! –ú—ã —É–∂–µ –≥–æ—Ç–æ–≤–∏–º –≤–∞—à –∑–∞–∫–∞–∑.</p>
          </div>
        ) : (
          <form className="order-modal-form" onSubmit={handleSubmit}>
            <h2 className="order-modal-title">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>
            <p className="order-modal-info">–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–π–º–µ—Ç <b>–æ—Ç 2 –¥–æ 4 –¥–Ω–µ–π</b>. –ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –∫–∞—á–µ—Å—Ç–≤–µ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏!</p>
            <div className="order-modal-field">
              <label>–§–ò–û</label>
              <input
                type="text"
                value={fullName}
                onChange={e => setFullName(e.target.value)}
                required
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
                className="form-control"
              />
            </div>
            <div className="order-modal-field">
              <label>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</label>
              <input
                type="text"
                value={address}
                onChange={e => setAddress(e.target.value)}
                required
                placeholder="–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                className="form-control"
              />
            </div>
            <div className="order-modal-field">
              <label>–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</label>
              <select
                value={deliveryMethod}
                onChange={e => setDeliveryMethod(e.target.value)}
                required
                className="form-control"
              >
                <option value="" disabled>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</option>
                {(() => {
                  console.log('OrderModal: —Ä–µ–Ω–¥–µ—Ä–∏–º –æ–ø—Ü–∏–∏, deliveryMethods:', deliveryMethods);
                  return deliveryMethods.map(method => (
                    <option key={method.id} value={method.id}>
                      {method.name} {method.cost_policy ? `(${method.cost_policy})` : ''}
                    </option>
                  ));
                })()}
              </select>
            </div>
            <div className="order-modal-message animate__animated animate__pulse animate__infinite">
              <span>‚ú® –ü—É—Å—Ç—å –≤–∞—à –¥–µ–Ω—å –±—É–¥–µ—Ç —Å–ª–∞–¥–∫–∏–º, –∫–∞–∫ –Ω–∞—à –º—ë–¥! ‚ú®</span>
            </div>
            {error && <div className="order-modal-error">{error}</div>}
            <button
              type="submit"
              className="order-modal-pay-btn"
              disabled={loading}
            >
              {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : `–û–ø–ª–∞—Ç–∏—Ç—å ${totalPrice} ‚ÇΩ`}
            </button>
            <button type="button" className="order-modal-close-btn" onClick={onClose} disabled={loading}>
              –û—Ç–º–µ–Ω–∞
            </button>
          </form>
        )}
      </div>
    </div>
  );
};

export default OrderModal; 