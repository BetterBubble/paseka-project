import React, { useState, useEffect, useRef } from 'react';
import { Link } from 'react-router-dom';
import ProductCard from '../components/ProductCard';
import api from '../services/api';

const AllProducts = () => {
  const [products, setProducts] = useState([]);
  const [categories, setCategories] = useState([]);
  const [loading, setLoading] = useState(true);
  const [filterCategory, setFilterCategory] = useState('all');
  const [sortBy, setSortBy] = useState('name');
  const [isVisible, setIsVisible] = useState(false);

  // Refs –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
  const heroRef = useRef(null);
  const statsRef = useRef(null);
  const productsRef = useRef(null);

  useEffect(() => {
    loadData();
  }, []);

  useEffect(() => {
    setTimeout(() => setIsVisible(true), 100);
  }, []);

  // –ê–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  useEffect(() => {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in');
        }
      });
    }, observerOptions);

    const refs = [heroRef, statsRef, productsRef];
    refs.forEach(ref => {
      if (ref.current) {
        observer.observe(ref.current);
      }
    });

    return () => {
      refs.forEach(ref => {
        if (ref.current) {
          observer.unobserve(ref.current);
        }
      });
    };
  }, []);

  const loadData = async () => {
    try {
      setLoading(true);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const categoriesResponse = await api.get('/categories/');
      const categoriesData = categoriesResponse.data.results || categoriesResponse.data;
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã (—Å —É—á–µ—Ç–æ–º –ø–∞–≥–∏–Ω–∞—Ü–∏–∏)
      let allProducts = [];
      let nextUrl = '/products/';
      
      while (nextUrl) {
        const productsResponse = await api.get(nextUrl);
        const data = productsResponse.data;
        
        if (data.results) {
          allProducts = [...allProducts, ...data.results];
          // –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ URL
          nextUrl = data.next ? data.next.replace('http://localhost:8000/api', '') : null;
        } else {
          // –ï—Å–ª–∏ –Ω–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
          allProducts = data;
          nextUrl = null;
        }
      }
      
      setProducts(allProducts);
      setCategories(categoriesData);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    } finally {
      setLoading(false);
    }
  };

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
  const getSortedAndFilteredProducts = () => {
    if (!products || products.length === 0) {
      return [];
    }
    
    let filtered = [...products];
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if (filterCategory !== 'all') {
      filtered = filtered.filter(product => {
        return product.category?.slug === filterCategory;
      });
    }

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    filtered.sort((a, b) => {
      switch (sortBy) {
        case 'price_asc':
          return parseFloat(a.price) - parseFloat(b.price);
        case 'price_desc':
          return parseFloat(b.price) - parseFloat(a.price);
        case 'name':
        default:
          return a.name.localeCompare(b.name);
      }
    });

    return filtered;
  };

  const getCategoryIcon = (categoryId) => {
    const categoryMap = {
      'category-1': 'üçØ',
      'category-2': '‚¨°',
      'category-3': 'üõ°Ô∏è',
      'category-4': 'üå∏',
      'category-5': 'üïØÔ∏è'
    };
    return categoryMap[categoryId] || 'üì¶';
  };

  const getCategoryName = (categoryId) => {
    const category = categories.find(cat => cat.slug === categoryId);
    return category ? category.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è';
  };

  const filteredProducts = getSortedAndFilteredProducts();
  const totalProducts = products.length;
  const categoryStats = categories.map(category => ({
    ...category,
    count: products.filter(product => product.category?.slug === category.slug).length
  }));

  if (loading) {
    return (
      <div className="category-loading">
        <div className="loading-container">
          <div className="honey-spinner">
            <div className="honey-drop"></div>
            <div className="honey-drop"></div>
            <div className="honey-drop"></div>
          </div>
          <p className="loading-text">–ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="category-page-modern all-products-page">
      {/* Hero —Å–µ–∫—Ü–∏—è */}
      <section 
        ref={heroRef}
        className="category-hero-modern"
        style={{
          background: 'linear-gradient(135deg, #ffd700 0%, #ffb347 25%, #ff8c00 50%, #daa520 75%, #b8860b 100%)'
        }}
      >
        <div className="hero-particles">
          {[...Array(20)].map((_, i) => (
            <div key={i} className="particle" style={{
              left: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 3}s`,
              animationDuration: `${3 + Math.random() * 2}s`
            }}></div>
          ))}
        </div>
        
        <div className="container">
          <div className="hero-content-category">
            <div className="category-icon-large">üõí</div>
            <h1 className="category-title">–í—Å–µ —Ç–æ–≤–∞—Ä—ã</h1>
            <p className="category-subtitle">
              –ü–æ–ª–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –Ω–∞—à–µ–π –ø–∞—Å–µ–∫–∏ - –º—ë–¥, —Å–æ—Ç—ã, –ø—Ä–æ–ø–æ–ª–∏—Å, –ø—ã–ª—å—Ü–∞ –∏ –≤–æ—Å–∫
            </p>
            
            <nav className="category-breadcrumb">
              <Link to="/" className="breadcrumb-link">–ì–ª–∞–≤–Ω–∞—è</Link>
              <span className="breadcrumb-separator">‚Üí</span>
              <span className="breadcrumb-current">–í—Å–µ —Ç–æ–≤–∞—Ä—ã</span>
            </nav>

            <div className="category-stats">
              <div className="stat-item">
                <span className="stat-number">{totalProducts}</span>
                <span className="stat-label">–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</span>
              </div>
              <div className="stat-item">
                <span className="stat-number">{categories.length}</span>
                <span className="stat-label">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</span>
              </div>
              <div className="stat-item">
                <span className="stat-number">100%</span>
                <span className="stat-label">–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
      <section ref={statsRef} className="py-5 category-stats-section" style={{background: 'linear-gradient(90deg, #fffbe6 0%, #fff9e6 100%)'}}>
        <div className="container">
          <div className="row mb-4">
            <div className="col text-center">
              <h3 className="text-honey fw-bold mb-2" style={{fontSize:'2rem'}}>–ù–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
              <p className="text-muted">–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</p>
            </div>
          </div>
          <div className="row g-4">
            {categoryStats.map((category) => (
              <div key={category.id} className="col-md-6 col-lg-4">
                <Link to={`/category/${category.slug}`} className="text-decoration-none">
                  <div className="card h-100 border-0 shadow-sm" style={{
                    background: 'linear-gradient(135deg, #fff8dc 0%, #ffe4b5 100%)',
                    transition: 'all 0.3s ease'
                  }}>
                    <div className="card-body text-center p-4">
                      <div className="mb-3" style={{fontSize: '3rem'}}>
                        {getCategoryIcon(category.slug)}
                      </div>
                      <h5 className="card-title text-honey fw-bold mb-2">{category.name}</h5>
                      <p className="card-text text-muted mb-3">{category.count} —Ç–æ–≤–∞—Ä–æ–≤</p>
                      <div className="progress" style={{height: '6px'}}>
                        <div 
                          className="progress-bar" 
                          style={{
                            width: `${(category.count / totalProducts) * 100}%`,
                            background: 'linear-gradient(90deg, #ffc107, #ff8c00)'
                          }}
                        ></div>
                      </div>
                    </div>
                  </div>
                </Link>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
      <section className="category-filters">
        <div className="container">
          <div className="filters-container">
            <div className="filters-left">
              <h2 className="filters-title">–§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</h2>
            </div>
            
            <div className="filters-right">
              <div className="filters-row">
                <div className="filter-group">
                  <label htmlFor="category-filter">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
                  <select 
                    id="category-filter"
                    value={filterCategory} 
                    onChange={(e) => setFilterCategory(e.target.value)}
                    className="filter-select"
                  >
                    <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                    {categories.map(category => (
                      <option key={category.id} value={category.slug}>
                        {category.name}
                      </option>
                    ))}
                  </select>
                </div>

                <div className="filter-group">
                  <label className="filter-label">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</label>
                  <select 
                    className="filter-select"
                    value={sortBy}
                    onChange={(e) => setSortBy(e.target.value)}
                  >
                    <option value="name">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
                    <option value="price_asc">–¶–µ–Ω–∞: –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é</option>
                    <option value="price_desc">–¶–µ–Ω–∞: –ø–æ —É–±—ã–≤–∞–Ω–∏—é</option>
                  </select>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* –¢–æ–≤–∞—Ä—ã */}
      <section ref={productsRef} className="category-products">
        <div className="container">
          <div className="products-header">
            <h2 className="products-title">
              {filterCategory === 'all' ? '–í—Å–µ —Ç–æ–≤–∞—Ä—ã' : `${getCategoryName(filterCategory)}`}
            </h2>
            <p className="products-count">–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {filteredProducts.length}</p>
            <p className="products-description">
              {filterCategory === 'all' 
                ? '–í–µ—Å—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—á–µ–ª–æ–≤–æ–¥—Å—Ç–≤–∞ –æ—Ç –Ω–∞—à–µ–π –ø–∞—Å–µ–∫–∏'
                : `–¢–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${getCategoryName(filterCategory)}"`
              }
            </p>
          </div>

          {filteredProducts.length > 0 ? (
            <div className="products-grid">
              {filteredProducts.map((product, index) => {
                return (
                  <div 
                    key={product.id} 
                    className="product-item"
                    style={{ animationDelay: `${index * 0.1}s` }}
                  >
                    <ProductCard product={product} />
                  </div>
                );
              })}
            </div>
          ) : (
            <div className="empty-category">
              <div className="empty-icon">üì¶</div>
              <h3 className="empty-title">–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
              <p className="empty-description">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
              </p>
              <Link to="/" className="empty-button">
                –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
              </Link>
            </div>
          )}
        </div>
      </section>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ–∫—Ü–∏—è */}
      <section className="category-info-modern">
        <div className="container">
          <div className="info-header">
            <h2 className="info-title">–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é?</h2>
            <p className="info-subtitle">
              –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—á–µ–ª–æ–≤–æ–¥—Å—Ç–≤–∞ –≤—ã—Å–æ—á–∞–π—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
            </p>
          </div>

          <div className="info-grid">
            <div className="info-card">
              <div className="card-header">
                <div className="card-icon">üèÜ</div>
                <h3 className="card-title">–ü—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ</h3>
              </div>
              <div className="card-content">
                <ul className="benefits-list">
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–∞—Å–µ–∫–∞ –≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç–æ–º —Ä–∞–π–æ–Ω–µ
                  </li>
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–º–∏ –∞–Ω–∞–ª–∏–∑–∞–º–∏
                  </li>
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –ë–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞—Ö–∞—Ä–∞ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                  </li>
                </ul>
              </div>
            </div>

            <div className="info-card">
              <div className="card-header">
                <div className="card-icon">üöö</div>
                <h3 className="card-title">–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</h3>
              </div>
              <div className="card-content">
                <ul className="benefits-list">
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-3 –¥–Ω–µ–π
                  </li>
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤
                  </li>
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 2000 ‚ÇΩ
                  </li>
                </ul>
              </div>
            </div>

            <div className="info-card">
              <div className="card-header">
                <div className="card-icon">üí∞</div>
                <h3 className="card-title">–í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã</h3>
              </div>
              <div className="card-content">
                <ul className="benefits-list">
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –ü—Ä—è–º—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è
                  </li>
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –°–∫–∏–¥–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
                  </li>
                  <li className="benefit-item">
                    <i className="bi bi-check-circle-fill"></i>
                    –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* CTA —Å–µ–∫—Ü–∏—è */}
      <section className="category-cta">
        <div className="container">
          <div className="cta-content">
            <div className="cta-text">
              <h2 className="cta-title">–ì–æ—Ç–æ–≤—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã?</h2>
              <p className="cta-description">
                –ó–∞–∫–∞–∂–∏—Ç–µ –ª—é–±–æ–π —Ç–æ–≤–∞—Ä –∏–∑ –Ω–∞—à–µ–≥–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–∞–º–∏!
              </p>
            </div>
            <div className="cta-actions">
              <Link to="/cart" className="cta-button primary">
                –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
              </Link>
              <Link to="/contact" className="cta-button secondary">
                –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
              </Link>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default AllProducts; 